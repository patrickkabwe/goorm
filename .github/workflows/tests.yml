name: Lint and Testing

on:
  push:
  pull_request:

permissions:
  contents: read
  pull-requests: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: "^1"
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --verbose

  postgres:
    strategy:
      matrix:
        os: [ubuntu-latest]
        go: [1.21, 1.22]
        dbversion:
          ["postgres:latest", "postgres:15", "postgres:14", "postgres:13"]
        include:
          - os: ubuntu-latest
            go-build: ~/.cache/go-build
    name: ${{ matrix.os }} @ Go ${{ matrix.go }} DB ${{ matrix.dbversion }}
    runs-on: ${{ matrix.os }}
    env:
      POSTGRES_PASSWORD: goorm-test
      POSTGRES_USER: goorm-test
      POSTGRES_DB: goorm-test
      POSTGRES_PORT: 9920
      POSTGRES_DSN: "postgres://goorm-test:goorm-test@localhost:9920/goorm-test?sslmode=disable&TimeZone=Africa/Lusaka"
      TZ: Africa/Lusaka
    services:
      postgres:
        image: ${{ matrix.dbversion }}
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          TZ: ${{ env.TZ }}
        ports:
          - 9920:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          check-latest: true

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ${{ matrix.go-build }}
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install netcat
        run: sudo apt-get install -y netcat-openbsd

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          until nc -z localhost ${{env.POSTGRES_PORT}}; do
            echo "PostgreSQL is unavailable - sleeping"
            sleep 1
          done
          echo "PostgreSQL is up and running!"

      - name: Download dependencies
        run: |
          go mod download
          if [ -d "goorm-cli" ]; then
            cd goorm-cli && go mod download && cd ..
          fi

      - name: Make script executable
        run: chmod +x ./run-test.sh

      - name: Run tests
        run: ./run-test.sh
